'table related commands'

SHOW DATABASES;
CREATE TABLE employee_db.EMP_TABLE (
EMP_ID VARCHAR (14) NOT NULL,
FIRST_NAME VARCHAR (100) NOT NULL,
LAST_NAME VARCHAR(100),
GENDER VARCHAR (1),
ROLE VARCHAR (100),
DEPT VARCHAR (100),
check (GENDER in ('M','F','O' ))
);
ALTER TABLE EMP_TABLE
ADD EXP INTEGER NOT NULL CHECK (EXP >=0);

ALTER TABLE EMP_TABLE
ADD MANAGER_ID VARCHAR (100);

ALTER TABLE EMP_TABLE
MODIFY GENDER VARCHAR (1) NOT NULL;

DESCRIBE EMP_TABLE;

ALTER TABLE EMP_TABLE
CHANGE COLUMN ROLE JOB VARCHAR (100);

ALTER TABLE EMP_TABLE
RENAME to EMP_RECORDS;

ALTER TABLE EMP_RECORDS
ADD FULL_NAME VARCHAR (200)
GENERATED ALWAYS AS(CONCAT (FIRST_NAME, ' ' ,LAST_NAME));

ALTER TABLE EMP_RECORDS
DROP MANAGER_ID;


'insert VALUE and querying the tables'

INSERT INTO 
EMP_RECORDS  (EMP_ID,FIRST_NAME,LAST_NAME,GENDER,JOB,DEPT,EXP)
VALUES
("E620", "Katrina", "Allen", "F", "JUNIOR DATA SCIENTIST", "RETAIL", "5"),
("E583", "Janet", "Hale", "F", "MANAGER", "RETAIL", "10"),
("E612", "Tracy", "Norris", "F", "MANAGER", "RETAIL", "13"),
("E002", "Cynthia", "Brooks", "F", "PRESIDENT", "ALL", "8");

SELECT EMP_ID,FIRST_NAME,EXP FROM EMP_RECORDS;

SELECT * FROM EMP_RECORDS
WHERE JOB = 'MANAGER';

SELECT DISTINCT JOB
FROM EMP_RECORDS
ORDER BY JOB;

SELECT * FROM EMP_RECORDS
WHERE JOB ='MANAGER'
OR DEPT = 'RETAIL';

SELECT * FROM EMP_RECORDS
WHERE JOB IN  ('JUNIOR DATA SCIENTIST','SENIOR DATA SCIENTIST');

SELECT * FROM EMP_RECORDS
WHERE EXP BETWEEN 7 AND 14;

INSERT INTO
EMP_RECORDS(EMP_ID,FIRST_NAME,LAST_NAME,GENDER,JOB,DEPT,EXP)
VALUES
("E052", "Dianna", "Wilson", "F", "SENIOR DATA SCIENTIST", "HEALTHCARE",  6),
("E505", "Chad", "Wilson", "M", "ASSOCIATE DATA SCIENTIST", "HEALTHCARE", 5),
("E083", "Patrick", "Voltz ", "M", "MANAGER", "HEALTHCARE", 15);

SELECT * FROM EMP_RECORDS
WHERE LAST_NAME LIKE 'w%';

SELECT * FROM EMP_RECORDS
ORDER BY EXP 
LIMIT 3;

'sorting and group by\n';
SELECT * FROM EMP_RECORDS
ORDER BY EXP DESC;

SELECT * FROM EMP_RECORDS
GROUP by DEPT
HAVING EXP BETWEEN 5 AND  10;

'Using arithemetic operators'
USE employee_db;
CREATE TABLE employee_db.employee_details(
Emp_ID VARCHAR(100) NOT NULL,
Emp_F_Name VARCHAR(100) NOT NULL,
Emp_L_Name VARCHAR(100) NOT NULL,
Emp_Salary INTEGER NOT NULL CHECK(Emp_Salary >=0),
Emp_AnnualBonus INTEGER NOT NULL CHECK (Emp_AnnualBonus >=0)
);

INSERT INTO employee_details
VALUES
("1134","Mark","Jacobs","20000","1500"),
("1256","John","Barter","25000","1000"),
("1277","Michael","Scar","22000","1000"),
("1300","Dan","Harris","30000","2000");

SELECT Emp_ID,Emp_Salary+Emp_AnnualBonus as Emp_TotalEarning FROM employee_details;

ALTER TABLE employee_details
ADD Deductions INTEGER NOT NULL CHECK (Deductions >=0);

UPDATE employee_details
SET Deductions ="200"
WHERE Emp_ID =1256;
UPDATE employee_details
SET Deductions ="150"
WHERE Emp_ID =1300;

SELECT Emp_ID,Emp_Salary-Deductions as Emp_finalEarning FROM employee_details;



