CREATE DATABASE PROJ_DB;
USE PROJ_DB;
SHOW TABLES;
DESCRIBE proj_table;
SHOW FULL COLUMNS FROM emp_record_table;
SET default_storage_engine=INNODB;

'Adding constraints to table'

ALTER TABLE emp_record_table
CHANGE ï»¿EMP_ID EMP_ID VARCHAR (100) NOT NULL;
ALTER TABLE emp_record_table
ADD CONSTRAINT constraint_name UNIQUE (EMP_ID);
ALTER TABLE PROJ_table
ADD CONSTRAINT constraint_name UNIQUE (PROJ_ID);

CREATE TABLE IF NOT EXISTS PROJ_DB.PROJ_ASSIGN (
EMP_ID VARCHAR(4) NOT NULL,
PROJ_ID VARCHAR(4) NOT NULL,
CONSTRAINT empid_check_2 CHECK ( SUBSTR(EMP_ID,1,1) = 'E'),
CONSTRAINT projid_check_2 CHECK ( SUBSTR(PROJ_ID,1,1) = 'P'),
FOREIGN KEY(EMP_ID) REFERENCES PROJ_DB.EMP_RECORD_TABLE(EMP_ID),
FOREIGN KEY(PROJ_ID) REFERENCES PROJ_DB.PROJ_TABLE(PROJ_ID)
) ENGINE=INNODB;

INSERT INTO proj_assign
VALUES
("E001","P103"),
("E005","P103"),
("E010","P105"),
("E052","P208"),
("E057","P406"),
("E083","P201"),
("E103","P406"),
("E204","P103"),
("E245","P103"),
("E260","P201"),
("E403","P105"),
("E428","P105"),
("E478","P109"),
("E505","P109"),
("E532","P109"),
("E583","P201"),
("E612","P204"),
("E620","P204"),
("E640","P406");

SET FOREIGN_KEY_CHECKS=0;
'INNER JOINS\n'
SELECT e.EMP_ID,e.FIRST_NAME,e.LAST_NAME,e.DEPT,e.`MANAGER ID`,p.PROJ_ID
FROM emp_record_table e
INNER JOIN PROJ_ASSIGN p USING (EMP_ID)
WHERE e.ROLE NOT IN ("MANAGER", "PRESIDENT", "CEO")
ORDER BY e.`MANAGER ID`;
'LEFT JOINS\n'
SELECT p.PROJ_ID,p.PROJ_NAME,p.DOMAIN,COUNT(DISTINCT(a.EMP_ID)) as EMP_COUNT,p.DEV_QTR,p.STATUS FROM proj_table p
LEFT JOIN proj_assign a ON p.PROJ_ID=a.PROJ_ID
WHERE p.STATUS IN ("DONE","WIP")
GROUP BY p.PROJ_NAME
ORDER BY PROJ_ID;
'UNIONS'
SELECT e.EMP_ID,CONCAT (FIRST_NAME," ",LAST_NAME) as FULL_NAME,e.DEPT FROM emp_record_table e
WHERE e.ROLE = "MANAGER"
UNION
SELECT p.PROJ_ID,p.PROJ_NAME,p.DOMAIN FROM proj_table p
ORDER BY DEPT,EMP_ID;

'Subqueries as expression\n'
SELECT p.proj_id,p.proj_name,p.domain FROM proj_table p
WHERE p.proj_id NOT IN (
SELECT DISTINCT a.proj_id FROM proj_assign a
);

/*
SELECT m.DEPT , COUNT(DISTINCT m.EMP_ID ) AS MANAGER_COUNT
(
SELECT COUNT(DISTINCT e.EMP_ID ) FROM emp_record_table e
WHERE e.ROLE NOT IN ("MANAGER", "PRESIDENT", "CEO")
AND
e.DEPT IN ("RETAIL") 
) AS TEAM_STRENGTH
FROM EMP_RECORD_TABLE m
WHERE
m.ROLE IN ("MANAGER") AND m.DEPT IN ("RETAIL");
*/

SELECT e.EMP_ID,CONCAT(e.FIRST_NAME," ",e.LAST_NAME) AS full_name,e.ROLE,e.DEPT FROM emp_record_table e
WHERE e.EXP= (
SELECT MAX(e.EXP) from emp_record_table e
);

SELECT e.EMP_ID,CONCAT(e.FIRST_NAME," ",e.LAST_NAME) AS full_name,e.EXP FROM emp_record_table e
WHERE e.EXP< ALL(
SELECT AVG(EXP) FROM emp_record_table
);

SELECT PROJ_NAME FROM proj_table
WHERE  EXISTS
(
SELECT PROJ_ID
FROM PROJ_ASSIGN
);
USE proj_db;
SELECT MAX(EXP) AS max_experience,MIN(EXP) as min_experience,FLOOR(AVG(EXP)) as avg_experience 
FROM 
(
SELECT EMP_ID,EXP FROM emp_record_table
)
AS Total_experience;